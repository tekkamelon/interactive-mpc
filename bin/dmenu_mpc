#!/bin/sh

# shellcheck disable=SC1091

# ====== 変数の設定 ======
# ロケールの設定
export LC_ALL=C
export LANG=C

# GNU coreutilsの挙動をPOSIXに準拠
export POSIXLY_CORRECT=1

# ====== 関数の定義 ======
# ヒアドキュメントで設定ファイルの変数を出力
heredocs () {

	cat <<- EOF
	export MPD_HOST="${MPD_HOST}"
	export MPD_PORT="${MPD_PORT}"
	EOF

}

# コマンド一覧
commands_list () {

	cat <<- EOF
	status
	toggle
	next
	prev
	random
	repeat
	stop
	clear
	lsplaylist
	playlist
	listall
	searchplay
	change_HOST
	change_PORT
	EOF

}
# ====== 関数の定義ここまで ======


# ====== スクリプトによる処理 ======
# MPD_HOSTがありかつMPD_PORTがない場合に真
if [ -n "${MPD_HOST}" ] && [ -z "${MPD_PORT}" ] ; then

	export MPD_PORT="6600"

# MPD_PORTがありかつMPD_HOSTがない場合に真
elif [ -z "${MPD_HOST}" ] && [ -n "${MPD_PORT}" ] ; then

	export MPD_HOST="localhost"

# どちらもない場合に真
elif [ -z "${MPD_HOST}" ] && [ -z "${MPD_PORT}" ] ; then

	# 設定ファイルのがあれば真,なければ偽
	if [ -e "${HOME}"/.interactive_mpc.conf ] ; then

		# 設定ファイルの読み込み
		. "${HOME}"/.interactive_mpc.conf

	else

		export MPD_HOST="localhost"
		export MPD_PORT="6600"
		
		# 変数の一覧を出力,設定ファイルへリダイレクト
		heredocs >| "${HOME}"/.interactive_mpc.conf

	fi

fi

# スクリプト本体の起動時の引数をdmenuに渡す
# デフォルトはフォントを"monospace",プロンプトに"dmenu_mpc",14行で表示
dmenu_custom="dmenu -i -fn monospace -p ${MPD_HOST} -l 14 ${*}"

# コマンド一覧を${dmenu_custom}で表示,選択されたコマンドを代入
selected_command=$(commands_list | ${dmenu_custom})

# 環境変数を代入
host="${MPD_HOST}"
port="${MPD_PORT}"

# 選択されたコマンドに応じて処理を分岐
case "${selected_command}" in

	# ステータスの表示
	"status" ) mpc status ;;

	# toggle,next,prev,random,repeat,stop,clearの場合,選択結果をmpcに渡す
	"toggle" | "next" | "prev" | "random" | "repeat" | "stop" | "clear" ) mpc "${selected_command}" ;;

	# playlistの場合,キュー内の曲に行番号を付与して出力,dmenuへ渡し,選択結果の行番号のみmpcに渡す
	"playlist" ) mpc playlist | nl -s":" | ${dmenu_custom} | cut -d":" -f1 | xargs mpc play ;;

	# listallの場合,曲一覧をdmenuに渡し,選択結果をmpcに渡す
	"listall" ) mpc listall | ${dmenu_custom} | mpc insert && mpc next ;;

	# lsplaylistの場合,プレイリスト一覧をdmenuに渡し,選択結果をmpcに渡す
	"lsplaylist" ) mpc lsplaylist | ${dmenu_custom} | xargs mpc load ;;

	# searchplayの場合,入力をmpcに渡す
	"searchplay" ) ${dmenu_custom} -p "please enter words" | xargs mpc searchplay ;;

	# change_HOSTの場合,dmneuから受け取った入力を変数に代入
	"change_HOST" ) input_host=$(echo "${host}" | ${dmenu_custom} -p "please Enter hostname or IP adress")
		
		# "input_host"で疎通確認,成功で真,失敗で偽
		if mpc --host="${input_host}" ; then 

			# 真の場合はメッセージを表示
			echo "chagned host:${input_host}"

			export MPD_HOST="${input_host}"

			# 真の場合は変数の一覧を出力,設定ファイルへリダイレクト
			heredocs >| "${HOME}"/.interactive_mpc.conf

		else

			# 偽の場合はメッセージを表示,dmenuに渡し,選択結果を捨てる
			echo "failed to resolve hostname!" | ${dmenu_custom} > /dev/null

		fi ;;

	# change_PORTの場合,dmneuから受け取った入力を変数に代入
	"change_PORT" ) input_port=$(echo "${port}" | ${dmenu_custom} -p "please Enter number of port")
		
		# "input_host"で疎通確認,成功で真,失敗で偽
		if mpc --port="${input_port}" ; then 

			# 真の場合はメッセージを表示
			echo "chagned port:${input_port}"

			export MPD_PORT="${input_port}"

			# 真の場合は変数の一覧を出力,設定ファイルへリダイレクト
			heredocs >| "${HOME}"/.interactive_mpc.conf
			
		else

			# 偽の場合はメッセージを表示,dmenuに渡し,選択結果を捨てる
			echo "failed to resolve number of port!" | ${dmenu_custom} > /dev/null

		fi ;;

	# 上記のいずれでもない場合はメッセージを表示
	* ) echo "command not found" | ${dmenu_custom} ;;

esac |

# 各コマンドの結果をdmenuに渡し,選択結果を捨てる
${dmenu_custom} > /dev/null

exit 0
